create type "public"."goal_type" as enum ('REGULAR', 'OWN', 'MIDFIELD');

create type "public"."player_position" as enum ('DEFENDER', 'ATTACKER');

create type "public"."team_color" as enum ('LIGHT', 'DARK');

create table "public"."game" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp without time zone not null default now(),
    "ended_at" timestamp without time zone
);


alter table "public"."game" enable row level security;

create table "public"."goal" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "type" goal_type not null default 'REGULAR'::goal_type,
    "profile_id" uuid not null,
    "game_id" uuid not null,
    "player_id" uuid not null default gen_random_uuid()
);


alter table "public"."goal" enable row level security;

create table "public"."player" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "position" player_position not null,
    "profile_id" uuid not null,
    "team_id" uuid not null
);


alter table "public"."player" enable row level security;

create table "public"."profile" (
    "id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone default now(),
    "full_name" text,
    "avatar_url" text,
    "avatar_color" text,
    "rating" smallint not null default '1000'::smallint
);


alter table "public"."profile" enable row level security;

create table "public"."profile_game" (
    "id" bigint generated by default as identity not null,
    "profile_id" uuid not null,
    "game_id" uuid not null
);


alter table "public"."profile_game" enable row level security;

create table "public"."team" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "color" team_color not null,
    "game_id" uuid not null default gen_random_uuid()
);


alter table "public"."team" enable row level security;

CREATE UNIQUE INDEX game_pkey ON public.game USING btree (id);

CREATE UNIQUE INDEX goal_pkey ON public.goal USING btree (id);

CREATE UNIQUE INDEX player_pkey ON public.player USING btree (id);

CREATE UNIQUE INDEX profile_game_pkey ON public.profile_game USING btree (id);

CREATE UNIQUE INDEX profile_pkey ON public.profile USING btree (id);

CREATE UNIQUE INDEX team_pkey ON public.team USING btree (id);

alter table "public"."game" add constraint "game_pkey" PRIMARY KEY using index "game_pkey";

alter table "public"."goal" add constraint "goal_pkey" PRIMARY KEY using index "goal_pkey";

alter table "public"."player" add constraint "player_pkey" PRIMARY KEY using index "player_pkey";

alter table "public"."profile" add constraint "profile_pkey" PRIMARY KEY using index "profile_pkey";

alter table "public"."profile_game" add constraint "profile_game_pkey" PRIMARY KEY using index "profile_game_pkey";

alter table "public"."team" add constraint "team_pkey" PRIMARY KEY using index "team_pkey";

alter table "public"."goal" add constraint "public_goal_game_id_fkey" FOREIGN KEY (game_id) REFERENCES game(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."goal" validate constraint "public_goal_game_id_fkey";

alter table "public"."goal" add constraint "public_goal_player_id_fkey" FOREIGN KEY (player_id) REFERENCES player(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."goal" validate constraint "public_goal_player_id_fkey";

alter table "public"."goal" add constraint "public_goal_profile_id_fkey" FOREIGN KEY (profile_id) REFERENCES profile(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."goal" validate constraint "public_goal_profile_id_fkey";

alter table "public"."player" add constraint "public_player_profile_id_fkey" FOREIGN KEY (profile_id) REFERENCES profile(id) not valid;

alter table "public"."player" validate constraint "public_player_profile_id_fkey";

alter table "public"."player" add constraint "public_player_team_id_fkey" FOREIGN KEY (team_id) REFERENCES team(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."player" validate constraint "public_player_team_id_fkey";

alter table "public"."profile" add constraint "public_profile_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."profile" validate constraint "public_profile_id_fkey";

alter table "public"."profile_game" add constraint "public_profile_game_game_id_fkey" FOREIGN KEY (game_id) REFERENCES game(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."profile_game" validate constraint "public_profile_game_game_id_fkey";

alter table "public"."profile_game" add constraint "public_profile_game_profile_id_fkey" FOREIGN KEY (profile_id) REFERENCES profile(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."profile_game" validate constraint "public_profile_game_profile_id_fkey";

alter table "public"."team" add constraint "public_team_game_id_fkey" FOREIGN KEY (game_id) REFERENCES game(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."team" validate constraint "public_team_game_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.create_game(lightattacker uuid, lightdefender uuid, darkattacker uuid, darkdefender uuid)
 RETURNS uuid
 LANGUAGE plpgsql
AS $function$declare
  created_game_id uuid;
  team_light_id uuid;
  team_dark_id uuid;
  light_attacker_id uuid;
  light_defender_id uuid;
  dark_attacker_id uuid;
  dark_defender_id uuid;
BEGIN
  insert into public.game
    default values 
    returning id into created_game_id;

  insert into public.team
    (game_id, color)
    values (created_game_id, 'LIGHT')
    returning id
    into team_light_id;

  INSERT into public.team
    (game_id, color)
    values (created_game_id, 'DARK')
    returning id
    into team_dark_id;

  INSERT into public.player
    (profile_id, team_id, position)
    values (lightAttacker, team_light_id, 'ATTACKER')
    returning id
    into light_attacker_id;
  INSERT into public.player
    (profile_id, team_id, position)
    values (lightDefender, team_light_id, 'DEFENDER')
    returning id
    into light_defender_id;
  INSERT into public.player
    (profile_id, team_id, position)
    values (darkAttacker, team_dark_id, 'ATTACKER')
    returning id
    into dark_attacker_id;
  INSERT into public.player
    (profile_id, team_id, position)
    values (darkDefender, team_dark_id, 'DEFENDER')
    returning id
    into dark_defender_id;

  INSERT into public.profile_game
    (profile_id, game_id)
    values (lightAttacker, created_game_id);
  INSERT into public.profile_game
    (profile_id, game_id)
    values (lightDefender, created_game_id);
  INSERT into public.profile_game
    (profile_id, game_id)
    values (darkAttacker, created_game_id);
  INSERT into public.profile_game
    (profile_id, game_id)
    values (darkDefender, created_game_id);

return created_game_id;
end;$function$
;

CREATE OR REPLACE FUNCTION public.handle_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$begin
  insert into public.profile (id, full_name, avatar_url)
  values (new.id, new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'avatar_url');
  return new;
end;$function$
;

create trigger on_auth_user_created
  after insert on auth.users
  for each row execute procedure public.handle_new_user();

grant delete on table "public"."game" to "anon";

grant insert on table "public"."game" to "anon";

grant references on table "public"."game" to "anon";

grant select on table "public"."game" to "anon";

grant trigger on table "public"."game" to "anon";

grant truncate on table "public"."game" to "anon";

grant update on table "public"."game" to "anon";

grant delete on table "public"."game" to "authenticated";

grant insert on table "public"."game" to "authenticated";

grant references on table "public"."game" to "authenticated";

grant select on table "public"."game" to "authenticated";

grant trigger on table "public"."game" to "authenticated";

grant truncate on table "public"."game" to "authenticated";

grant update on table "public"."game" to "authenticated";

grant delete on table "public"."game" to "service_role";

grant insert on table "public"."game" to "service_role";

grant references on table "public"."game" to "service_role";

grant select on table "public"."game" to "service_role";

grant trigger on table "public"."game" to "service_role";

grant truncate on table "public"."game" to "service_role";

grant update on table "public"."game" to "service_role";

grant delete on table "public"."goal" to "anon";

grant insert on table "public"."goal" to "anon";

grant references on table "public"."goal" to "anon";

grant select on table "public"."goal" to "anon";

grant trigger on table "public"."goal" to "anon";

grant truncate on table "public"."goal" to "anon";

grant update on table "public"."goal" to "anon";

grant delete on table "public"."goal" to "authenticated";

grant insert on table "public"."goal" to "authenticated";

grant references on table "public"."goal" to "authenticated";

grant select on table "public"."goal" to "authenticated";

grant trigger on table "public"."goal" to "authenticated";

grant truncate on table "public"."goal" to "authenticated";

grant update on table "public"."goal" to "authenticated";

grant delete on table "public"."goal" to "service_role";

grant insert on table "public"."goal" to "service_role";

grant references on table "public"."goal" to "service_role";

grant select on table "public"."goal" to "service_role";

grant trigger on table "public"."goal" to "service_role";

grant truncate on table "public"."goal" to "service_role";

grant update on table "public"."goal" to "service_role";

grant delete on table "public"."player" to "anon";

grant insert on table "public"."player" to "anon";

grant references on table "public"."player" to "anon";

grant select on table "public"."player" to "anon";

grant trigger on table "public"."player" to "anon";

grant truncate on table "public"."player" to "anon";

grant update on table "public"."player" to "anon";

grant delete on table "public"."player" to "authenticated";

grant insert on table "public"."player" to "authenticated";

grant references on table "public"."player" to "authenticated";

grant select on table "public"."player" to "authenticated";

grant trigger on table "public"."player" to "authenticated";

grant truncate on table "public"."player" to "authenticated";

grant update on table "public"."player" to "authenticated";

grant delete on table "public"."player" to "service_role";

grant insert on table "public"."player" to "service_role";

grant references on table "public"."player" to "service_role";

grant select on table "public"."player" to "service_role";

grant trigger on table "public"."player" to "service_role";

grant truncate on table "public"."player" to "service_role";

grant update on table "public"."player" to "service_role";

grant delete on table "public"."profile" to "anon";

grant insert on table "public"."profile" to "anon";

grant references on table "public"."profile" to "anon";

grant select on table "public"."profile" to "anon";

grant trigger on table "public"."profile" to "anon";

grant truncate on table "public"."profile" to "anon";

grant update on table "public"."profile" to "anon";

grant delete on table "public"."profile" to "authenticated";

grant insert on table "public"."profile" to "authenticated";

grant references on table "public"."profile" to "authenticated";

grant select on table "public"."profile" to "authenticated";

grant trigger on table "public"."profile" to "authenticated";

grant truncate on table "public"."profile" to "authenticated";

grant update on table "public"."profile" to "authenticated";

grant delete on table "public"."profile" to "service_role";

grant insert on table "public"."profile" to "service_role";

grant references on table "public"."profile" to "service_role";

grant select on table "public"."profile" to "service_role";

grant trigger on table "public"."profile" to "service_role";

grant truncate on table "public"."profile" to "service_role";

grant update on table "public"."profile" to "service_role";

grant delete on table "public"."profile_game" to "anon";

grant insert on table "public"."profile_game" to "anon";

grant references on table "public"."profile_game" to "anon";

grant select on table "public"."profile_game" to "anon";

grant trigger on table "public"."profile_game" to "anon";

grant truncate on table "public"."profile_game" to "anon";

grant update on table "public"."profile_game" to "anon";

grant delete on table "public"."profile_game" to "authenticated";

grant insert on table "public"."profile_game" to "authenticated";

grant references on table "public"."profile_game" to "authenticated";

grant select on table "public"."profile_game" to "authenticated";

grant trigger on table "public"."profile_game" to "authenticated";

grant truncate on table "public"."profile_game" to "authenticated";

grant update on table "public"."profile_game" to "authenticated";

grant delete on table "public"."profile_game" to "service_role";

grant insert on table "public"."profile_game" to "service_role";

grant references on table "public"."profile_game" to "service_role";

grant select on table "public"."profile_game" to "service_role";

grant trigger on table "public"."profile_game" to "service_role";

grant truncate on table "public"."profile_game" to "service_role";

grant update on table "public"."profile_game" to "service_role";

grant delete on table "public"."team" to "anon";

grant insert on table "public"."team" to "anon";

grant references on table "public"."team" to "anon";

grant select on table "public"."team" to "anon";

grant trigger on table "public"."team" to "anon";

grant truncate on table "public"."team" to "anon";

grant update on table "public"."team" to "anon";

grant delete on table "public"."team" to "authenticated";

grant insert on table "public"."team" to "authenticated";

grant references on table "public"."team" to "authenticated";

grant select on table "public"."team" to "authenticated";

grant trigger on table "public"."team" to "authenticated";

grant truncate on table "public"."team" to "authenticated";

grant update on table "public"."team" to "authenticated";

grant delete on table "public"."team" to "service_role";

grant insert on table "public"."team" to "service_role";

grant references on table "public"."team" to "service_role";

grant select on table "public"."team" to "service_role";

grant trigger on table "public"."team" to "service_role";

grant truncate on table "public"."team" to "service_role";

grant update on table "public"."team" to "service_role";

create policy "Enable access for all authenticed users"
on "public"."game"
as permissive
for all
to authenticated
using (true);


create policy "Enable access for all authenticated users"
on "public"."goal"
as permissive
for all
to authenticated
using (true);


create policy "Enable access for all authenticated users"
on "public"."player"
as permissive
for all
to authenticated
using (true);


create policy "Public profiles are viewable by everyone."
on "public"."profile"
as permissive
for select
to public
using (true);


create policy "Users can insert their own profile."
on "public"."profile"
as permissive
for insert
to public
with check ((( SELECT auth.uid() AS uid) = id));


create policy "Users can update own profile."
on "public"."profile"
as permissive
for update
to public
using ((( SELECT auth.uid() AS uid) = id));


create policy "Enable access for all authenticated users"
on "public"."profile_game"
as permissive
for all
to authenticated
using (true);


create policy "Enable access for all authenticated users"
on "public"."team"
as permissive
for all
to authenticated
using (true);



